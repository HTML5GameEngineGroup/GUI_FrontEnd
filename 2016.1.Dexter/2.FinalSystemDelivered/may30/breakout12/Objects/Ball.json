{"0":"objectListItem1","1":"window[\"Ball\"] = function(renderableObj) {\n    GameObject.call(this, renderableObj);\n    this.mDX = 0.07;\n    this.mDY = -0.07;\n    this.mCircleBound = true;\n    this.mCollidableFlag = true;\n    this.mCollisionPixelFlag = false;\n    this.mDestroy = false;\n}\ngEngine.Core.inheritPrototype(window[\"Ball\"], window[\"GameObject\"]);\n\nBall.prototype.update = function() {\n    GameObject.prototype.update.call(this);\n    move(this, this.mDX, this.mDY);\n};\n\nBall.prototype.draw = function(aCamera) {\n    GameObject.prototype.draw.call(this, aCamera);\n};\n\nBall.prototype.onCollisionStay = function(otherObj) {\n    \n};\n\nBall.prototype.onCollisionEnter = function(otherObj) {\n    if (otherObj instanceof Paddle || otherObj instanceof Wall || otherObj instanceof Brick) {\n        this.bounce();\n    }\n    if (otherObj instanceof OutOfBounds) {\n        switchScene(\"Lose\");\n    }\n};\n\nBall.prototype.onCollisionExit = function(otherObj) {\n    \n};\n\nBall.prototype.bounce = function() {\n    // Takes your current dx and dy and mirrors one\n    if ((this.mDX > 0 && this.mDY > 0) || (this.mDX < 0 && this.mDY < 0) || (this.mDY !== 0 && this.mDX === 0)) {\n        this.mDY *= -1;\n    } else if ((this.mDX > 0 && this.mDY < 0) || (this.mDX < 0 && this.mDY > 0) || (this.mDY === 0 && this.mDX !== 0)) {\n        this.mDX *= -1;\n    } else { // Both were 0\n        // Do nothing -- honestly we could just replace the 2nd else if with else, because mirroring 0 is still 0\n    }\n};","2":1,"3":20,"4":60,"5":2,"6":2,"7":0,"8":[1,0,0,"1"]}